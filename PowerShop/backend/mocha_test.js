
import chai from "chai";
import chaiHttp from "chai-http";
const { expect } = chai;
chai.use(chaiHttp);
const url = '192.168.137.37:5000'
const user = {
  name: "test",
  email: "test@soton.ac.uk",
  password: "123456",
}
var userInfo = {
  name: "test",
  email: "test@soton.ac.uk",
  password: "123456",
  cleanpowerpoint: 0,
  role: "consumer",
  token: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6InRlc3RAc290b24uYWMudWsiLCJpYXQiOjE2MzAwMTUzNjAsImV4cCI6MTYzMjYwNzM2MH0.6ouTy6cCe5FTUYbwoRAFyi8p7L3pRrlp8UU0JPe4xhs",
};
var product = {
  category: "power",
  price: 1,
  status: "selling",
  _id: "61231abf5781d75bead383ee",
  name: "NingxiaWind",
  sellerEmail: "admin@admin.com",
  image: "/uploads/image-1629690555727.PNG",
  description: "generated by Ningxia Province",
  createdAt: "2021-08-23T03:49:19.327Z",
  updatedAt: "2021-08-26T15:00:01.111Z",
  __v: 0,
}

var orderInfo = {
  shippingAddress: {
    address: '2 Mayfiled Road',
    postalCode: 'SO17 3SX',
    dateTime: '10/09/2021'
  },
  product: {
    product: '61231abf5781d75bead383ee',
    name: 'NingxiaWind',
    image: '/uploads/image-1629690555727.PNG',
    price: 1,
    seller: 'admin@admin.com',
    status: 'selling',
    category: 'power'
  },
  email:userInfo.email,
}
let date = new Date().valueOf()
let certnumber = product.name + date

var certificate = {
  certno: certnumber,
  generator: product.name,
  power: 10,
  owner: userInfo.email,
  generatedate: date,
}
var cert ={}
describe("User module", function () {
  it("User register", async () => {
    chai.request(url).post("/api/users").send({ name: user.name, email: user.email, password: user.password })
      .end(function (error, res) {
        userInfo = (JSON.parse(res.text))
        console.log("user register:token:"+(JSON.parse(res.text)).token)
        expect(res.data.name).to.equal('test')
        expect(res).to.have.status(200);
      });
  });
  it("User login", async () => {
    chai.request(url).post("/api/users/login").set("Content-Type", "application/json").send({ email: userInfo.email, password: userInfo.password })
      .end(function (error, res) {
        //console.log(JSON.stringify(res))
        //console.log("wocao!!!!!!!!"+JSON.stringify(JSON.parse(res.text)))
        userInfo.token = (JSON.parse(res.text)).token;
        console.log("Login token:"+userInfo.token)
        expect(res).to.have.status(200);
      });
  });
  it("User profile update", async () => {
    chai.request(url).put("/api/users/profile/test@soton.ac.uk")
      .set("Authorization", `Bearer ${userInfo.token}`)
      .set("Content-Type", "application/json")
      .send(userInfo)
      .end(function (error, res) {
        //userInfo.token = JSON.parse(res.text).token;
        //console.log("profile update token:"+userInfo.token)
        //expect(2).to.equal(2)
        expect(res).to.have.status(200);
      });
  })
});
describe("Item browse module", () => {
  it("Power Market", async () => {
    try {
      chai.request(url)
        .get('/api/products?category=power&keyword=&pageNumber')
        .end(function (error, res) {
          expect(res).to.have.status(200);
        });
    } catch (error) {
      console.log("11111111111")
    }

  });
  it("Gift Market", async () => {
    try {
      chai.request(url)
        .get('/api/products?category=gift&keyword=&pageNumber')
        .end(function (error, res) {
          expect(res).to.have.status(200);
        });
    } catch (error) {
      console.log("11111111111")
    }
  });
  it("Point Market", async () => {
    try {
      chai.request(url)
        .get('/api/products?category=point&keyword=&pageNumber')
        .end(function (error, res) {
          expect(res).to.have.status(200);
        });
    } catch (error) {
      console.log("11111111111")
    }
  });
  it("Product Detail", async () => {
    chai.request(url)
      .get('/api/products/61231abf5781d75bead383ee')
      .end(function (error, res) {
        expect(res).to.have.status(200);
      });
  });
});
describe("Consume Scenarios", function () {
  it("Buy Clean Power", async () => {
    chai.request(url).post("/api/orders")
      .set("Authorization", `Bearer ${userInfo.token}`)
      .set("Content-Type", "application/json")
      .send(orderInfo)
      .end(function (error, res) {
        expect(res).to.have.status(200);
      });
  });
  it(" Generate Clean Power Certificate",async()=>{
    chai.request(url)
    .post("/api/cert/generate")
    .send(certificate)
    .end(function (error, res) {
      expect(res).to.have.status(200);
    });    
  });
  it("Get All Certificates",async()=>{
    chai.request(url)
    .get('/api/cert/test@soton.ac.uk')
    .set("Authorization", `Bearer ${userInfo.token}`)
    .set("Content-Type", "application/json")
    .end(function (error, res) {
      cert = res.data[0];
      expect(res).to.have.status(200);
    }); 
  })
  it("Redeem Certificate to add Clean Power Point in Account",async()=>{
    chai.request(url)
    .post('/api/cert/redeem')
    .set("Authorization", `Bearer ${userInfo.token}`)
    .set("Content-Type", "application/json")
    .send({"certno":cert.certno})
    .end(function (error, res) {
      console.log(JSON.stringify(res))
      expect(res).to.have.status(200);
    }); 
  });
  it("Consume Clean Power Point in Gift Market",async()=>{
    var newUser = userInfo;
    newUser.cleanpowerpoint = newUser.cleanpowerpoint - 5;
    chai.request(url)
    .put(`api/users/profile/${newUser.email}`)
    .set("Authorization", `Bearer ${userInfo.token}`)
    .set("Content-Type", "application/json")
    .send(newUser)
    .end(function (error, res) {
      console.log("Gift market token:"+JSON.stringify(newUser))
      console.log(JSON.stringify(res))
      console.log("????????")
      //expect(2).to.equal(2)
      expect(res).to.have.status(200);
    });    
  });
  it("Buy Clean Power Point in Point Market",async()=>{
    var newUser = userInfo;
    newUser.cleanpowerpoint = newUser.cleanpowerpoint + 10;
    chai.request(url)
    .put(`api/users/profile/${newUser.email}`)
    .set("Authorization", `Bearer ${userInfo.token}`)
    .set("Content-Type", "application/json")
    .send(newUser)
    .end(function (error, res) {
      expect(res).to.have.status(200);
    });    
  });
});